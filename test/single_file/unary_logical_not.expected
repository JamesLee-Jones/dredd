#include <cstdlib>
#include <functional>

static bool __dredd_enabled_mutation(int local_mutation_id) {
  static bool initialized = false;
  static bool enabled[4];
  if (!initialized) {
    const char* __dredd_environment_variable = std::getenv("DREDD_ENABLED_MUTATION");
    if (__dredd_environment_variable != nullptr) {
      int value = atoi(__dredd_environment_variable);
      int local_value = value - 0;
      if (local_value >= 0 && local_value < 4) {
        enabled[local_value] = true;
      }
    }
    initialized = true;
  }
  return enabled[local_mutation_id];
}

static bool __dredd_replace_unary_operator_LNot_bool(std::function<bool&()> arg, int local_mutation_id) {
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg();
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return true;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return false;
  return !arg();
}

int main() {
  bool y = true;
  if (!__dredd_enabled_mutation(3)) { return __dredd_replace_unary_operator_LNot_bool([&]() -> bool& { return static_cast<bool&>(y); }, 0); }
}
